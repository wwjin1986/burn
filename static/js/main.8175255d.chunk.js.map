{"version":3,"sources":["components/commons/NavBar.jsx","components/DailyCalories.jsx","components/Exercise.jsx","components/Health.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","style","backgroundColor","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","DailyCalories","tempDate","Date","currDate","getFullYear","getMonth","getDate","display","borderColor","href","Exercise","state","exercise","calorie","value","time","duration","fetchCalorie","_callee","query","regenerator_default","wrap","_context","prev","next","fetch","method","mode","cache","credentials","headers","Content-Type","x-app-key","x-app-id","redirect","referrer","body","JSON","stringify","gender","weight_kg","height_cm","age","then","response","json","data","console","log","exercises","_this","setState","nf_calories","stop","handleSelectTime","event","target","name","handleTimeChange","_callee2","_context2","this","_this2","_this3","Fragment","lib","defaultValue","onChange","handleSelectExercise","placeholder","aria-describedby","checked","color","Health","height","weight","App","commons_NavBar","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8175255d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav\n        className=\"navbar navbar-expand-lg navbar-light\"\n        style={{ backgroundColor: \"#e3f2fd\" }}\n      >\n        <Link className=\"navbar-brand\" to=\"\">\n          Burn it\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/home\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/profile\">\n                Profile\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nclass DailyCalories extends Component {\n  render() {\n    const tempDate = new Date();\n    const date =\n      tempDate.getFullYear() +\n      \"-\" +\n      (tempDate.getMonth() + 1) +\n      \"-\" +\n      tempDate.getDate();\n    // \" \" +\n    // tempDate.getHours() +\n    // \":\" +\n    // tempDate.getMinutes() +\n    // \":\" +\n    // tempDate.getSeconds();\n    const currDate = date;\n\n    return (\n      <div className=\"Row\">\n        <div\n          className=\"card  mb-3 ml-5 mt-5\"\n          style={{\n            display: \"inline-block\",\n            borderColor: \"#9cd1f8\"\n          }}\n        >\n          <div className=\"card-header bg-transparent\">\n            <h5>{currDate}</h5>\n          </div>\n          <div className=\"card-body \">\n            <span\n              className=\"card-title mr-2\"\n              style={{ display: \"inline-block\" }}\n            >\n              Walking 30 minutes : 100 Calorie\n            </span>\n            <a\n              className=\"btn btn-outline-secondary btn-sm mb-2\"\n              href=\"#\"\n              style={{ display: \"inline-block\" }}\n            >\n              <i className=\"fa fa-trash-o fa-lg\" />\n            </a>\n          </div>\n\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }} />\n            <div style={{ display: \"inline-block\" }}>\n              Last updated : 2019-6-12 14:35\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DailyCalories;\n","import React, { Component } from \"react\";\nimport DropdownList from \"react-widgets/lib/DropdownList\";\nimport { SelectList } from \"react-widgets\";\n\nclass Exercise extends Component {\n  state = {\n    exercise: \"run\",\n    calorie: 10,\n    value: \"running\",\n    time: \"minutes\",\n    duration: 0\n  };\n  async componentDidMount() {\n    console.log(this.state.exercise);\n  }\n  fetchCalorie = async query => {\n    await fetch(\"https://trackapi.nutritionix.com/v2/natural/exercise\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-app-key\": \"d1f7ab9e52b72ffdcace031cd9fb3e75\",\n        \"x-app-id\": \"04ca317f\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify({\n        query: query,\n        gender: \"female\",\n        weight_kg: 50,\n        height_cm: 160,\n        age: 33\n      }) // body data type must match \"Content-Type\" header\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.exercises[0]);\n\n        this.setState({ calorie: data.exercises[0].nf_calories });\n      }); // parses JSON response into native Javascript objects\n  };\n  handleSelectExercise(value) {\n    this.setState({ value: value }, () => console.log(this.state.value));\n    if (this.state.duration > 0) {\n      let duration = this.state.duration;\n      if (this.state.time === \"hours\") {\n        duration = 60 * duration;\n      }\n      let query = value + \" \" + duration + \" \" + \"minutes\";\n      console.log(query);\n      this.fetchCalorie(query);\n    }\n    //call back function to get the updated value for console\n  }\n  handleSelectTime = event => {\n    this.setState({ time: event.target.name });\n    if (this.state.duration > 0) {\n      let duration = this.state.duration;\n      if (event.target.name === \"hours\") {\n        duration = 60 * duration;\n      }\n\n      let query = this.state.value + \" \" + duration + \" \" + \"minutes\";\n      console.log(query);\n      this.fetchCalorie(query);\n    }\n  };\n\n  handleTimeChange = async event => {\n    this.setState({ duration: event.target.value }, () =>\n      console.log(this.state.duration)\n    );\n    let duration = event.target.value;\n    if (this.state.time === \"hours\") {\n      duration = 60 * event.target.value;\n    }\n    let query = this.state.value + \" \" + duration + \" \" + \"minutes\";\n    console.log(query);\n    this.fetchCalorie(query);\n  };\n  render() {\n    //let { DropdownList } = ReactWidgets;\n\n    const colors = [\n      \"running\",\n      \"walking\",\n      \"hiit\",\n      \"cardio\",\n      \"yoga\",\n      \"elliptial\"\n    ];\n    return (\n      <React.Fragment>\n        <div\n          className=\"card  mb-3 ml-5 mt-5\"\n          style={{\n            display: \"inline-block\",\n            borderColor: \"#9cd1f8\"\n          }}\n        >\n          <div\n            className=\"card-header bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <h5>Add new exercise</h5>\n          </div>\n          <div className=\"card-body \">\n            <div>\n              <label>\n                <span>Exercise</span>\n                <SelectList\n                  data={colors}\n                  defaultValue={\"running\"}\n                  onChange={value => this.handleSelectExercise(value)}\n                />\n              </label>\n            </div>\n            <div className=\"input-group\">\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                placeholder=\"Time\"\n                aria-label=\"Time\"\n                aria-describedby=\"button-addon4\"\n                onChange={this.handleTimeChange}\n              />\n\n              <div className=\"btn-group btn-group-toggle\" data-toggle=\"button\">\n                <label\n                  className={\n                    this.state.time === \"minutes\"\n                      ? \"btn btn-outline-secondary active\"\n                      : \"btn btn-outline-secondary\"\n                  }\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"minutes\"\n                    checked={this.state.time === \"minutes\"}\n                    onChange={this.handleSelectTime}\n                  />\n                  minutes\n                </label>\n                <label\n                  className={\n                    this.state.time === \"hours\"\n                      ? \"btn btn-outline-secondary active\"\n                      : \"btn btn-outline-secondary\"\n                  }\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"hours\"\n                    checked={this.state.time === \"hours\"}\n                    onChange={this.handleSelectTime}\n                  />\n                  hours\n                </label>\n              </div>\n            </div>\n\n            <div className=\"mt-2\">\n              {this.state.duration > 0 && (\n                <span>\n                  I did {this.state.duration} {this.state.time}{\" \"}\n                  {this.state.value}. <br />\n                  Total calories estimated:\n                  {this.state.calorie}\n                  Calories.\n                </span>\n              )}\n            </div>\n          </div>\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }}>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm ml-2\"\n                style={{ backgroundColor: \"#9cd1f8\", color: \"white\" }}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default Exercise;\n","import React, { Component } from \"react\";\nclass Health extends Component {\n  state = {\n    height: 160,\n    weight: 55,\n    age: 33\n  };\n  render() {\n    return (\n      <div\n        className=\"card  mb-3 ml-5 mt-5\"\n        style={{\n          display: \"inline-block\",\n          borderColor: \"#9cd1f8\"\n        }}\n      >\n        <div\n          className=\"card-header bg-transparent\"\n          style={{ borderColor: \"#9cd1f8\" }}\n        >\n          <h5>Weiwei's Personal Profile</h5>\n        </div>\n        <div className=\"card-body \">\n          <div className=\"row mr-5\">\n            <label>\n              Weight: <input type=\"number\" />\n            </label>\n            <label>\n              Height: <input type=\"number\" />\n            </label>\n            <label>\n              Age: <input type=\"number\" />\n            </label>\n          </div>\n        </div>\n\n        <div\n          className=\"card-footer bg-transparent\"\n          style={{ borderColor: \"#9cd1f8\" }}\n        >\n          <div style={{ display: \"inline-block\" }} />\n          <div style={{ display: \"inline-block\" }}>\n            <button\n              className=\"btn btn-sm ml-2\"\n              style={{ backgroundColor: \"#9cd1f8\", color: \"white\" }}\n            >\n              Clear\n            </button>\n            <button\n              className=\"btn btn-sm ml-2\"\n              style={{ backgroundColor: \"#9cd1f8\", color: \"white\" }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Health;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/commons/NavBar\";\nimport DailyCalories from \"./components/DailyCalories\";\nimport Exercise from \"./components/Exercise\";\nimport Health from \"./components/Health\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <div>\n        <Switch>\n          <Route path=\"/home\" component={DailyCalories} />\n          <Route path=\"/profile\" component={Health} />\n          <Route path=\"/\" component={Exercise} />\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}