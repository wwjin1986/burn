{"version":3,"sources":["components/commons/NavBar.jsx","components/DailyCalories.jsx","components/commons/fetchPostAPI.jsx","components/commons/fetchGetAPI.jsx","components/commons/fetchDeleteAPI.jsx","components/commons/Time.jsx","components/Exercise.jsx","components/Health.jsx","components/Today.jsx","components/Planner.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","style","backgroundColor","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","fetchPostAPI","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","url","method","body","wrap","_context","prev","next","fetch","mode","headers","Content-Type","cache","stop","_x","_x2","_x3","apply","this","arguments","fetchGetAPI","res","then","response","json","catch","error","sent","abrupt","fetchDeleteAPI","todayDate","time","Date","getFullYear","getMonth","getDate","Exercise","state","calorie","workout","duration","todayTotal","records","dailyGoal","show","newDailyGoal","date","fetchCalorie","query","credentials","x-app-key","x-app-id","redirect","referrer","JSON","stringify","gender","weight_kg","height_cm","age","data","_this","setState","Math","round","exercises","nf_calories","handleSelectTime","event","target","name","handleTimeChange","_callee2","_context2","value","handleSubmit","_callee3","calorieBurned","_context3","toLocaleString","config","apiEndPoint","t0","t1","t2","t3","call","_this2","_this3","Fragment","borderColor","width","lib","defaultValue","onChange","handleSelectExercise","placeholder","aria-describedby","checked","display","color","onClick","colSpan","scope","map","record","key","handleDelete","aria-hidden","Health","height","heightincm","weight","unit","newWeight","showAlert","showInfo","weights","handleSelectMeter","handleEdit","handleCancel","handleNewWeightInput","handleAddWeight","body2","console","log","currentTarget","role","data-dismiss","cursor","min","step","es6","dataKey","offset","position","label","angle","stroke","strokeDasharray","verticalAlign","y","Today","showGoalForm","showWeightForm","handleEditWeight","handleEditGoal","handleChangeDailyGoal","handleSave","aria-valuenow","aria-valuemin","aria-valuemax","Planner","handleClick","day","data-placement","title","App","commons_NavBar","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.311ea98f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../config.json\";\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav\n        className=\"navbar navbar-expand-lg navbar-light\"\n        style={{ backgroundColor: \"#e3f2fd\" }}\n      >\n        <Link className=\"navbar-brand\" to=\"\">\n          Burn it\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={\"/today\"}>\n                Today\n              </Link>\n            </li>\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={\"/addexercise\"}>\n                Exercises\n              </Link>\n            </li>\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={\"/addweight\"}>\n                Weights\n              </Link>\n            </li>\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={\"/planner\"}>\n                Plans\n              </Link>\n            </li>\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to={\"/profile\"}>\n                Profile\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nclass DailyCalories extends Component {\n  render() {\n    const tempDate = new Date();\n    const date =\n      tempDate.getFullYear() +\n      \"-\" +\n      (tempDate.getMonth() + 1) +\n      \"-\" +\n      tempDate.getDate();\n    // \" \" +\n    // tempDate.getHours() +\n    // \":\" +\n    // tempDate.getMinutes() +\n    // \":\" +\n    // tempDate.getSeconds();\n    const currDate = date;\n\n    return (\n      <div className=\"Row\">\n        <div\n          className=\"card  mb-3 ml-5 mt-5\"\n          style={{\n            display: \"inline-block\",\n            borderColor: \"#9cd1f8\"\n          }}\n        >\n          <div className=\"card-header bg-transparent\">\n            <h5>{currDate}</h5>\n          </div>\n          <div className=\"card-body \">\n            <span\n              className=\"card-title mr-2\"\n              style={{ display: \"inline-block\" }}\n            >\n              Walking 30 minutes : 100 Calorie\n            </span>\n            <a\n              className=\"btn btn-outline-secondary btn-sm mb-2\"\n              href=\"#\"\n              style={{ display: \"inline-block\" }}\n            >\n              <i className=\"fa fa-trash-o fa-lg\" />\n            </a>\n          </div>\n\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }} />\n            <div style={{ display: \"inline-block\" }}>\n              Last updated : 2019-6-12 14:35\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DailyCalories;\n","const fetchPostAPI = async (url, method, body) => {\n  await fetch(url, {\n    method: method, // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: body,\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  });\n};\n\nexport default fetchPostAPI;\n","const fetchGetAPI = async url => {\n  let res = await fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    });\n  return res;\n};\n\nexport default fetchGetAPI;\n","const fetchDeleteAPI = async url => {\n  await fetch(url, {\n    method: \"DELETE\",\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  });\n};\n\nexport default fetchDeleteAPI;\n","const todayDate = type => {\n  if (type === \"yyyy-mm-dd\") {\n    let time = new Date();\n    return (\n      time.getFullYear() + \"-\" + (time.getMonth() + 1) + \"-\" + time.getDate()\n    );\n  }\n};\nexport default todayDate;\n","import React, { Component } from \"react\";\nimport { SelectList } from \"react-widgets\";\nimport fetchPostAPI from \"./commons/fetchPostAPI\";\nimport fetchGetAPI from \"./commons/fetchGetAPI\";\nimport config from \"./config.json\";\nimport fetchDeleteAPI from \"./commons/fetchDeleteAPI\";\nimport todayDate from \"./commons/Time\";\nclass Exercise extends Component {\n  state = {\n    calorie: 10,\n    workout: \"running\",\n    time: \"minutes\",\n    duration: 0,\n    todayTotal: 0,\n    records: [],\n    dailyGoal: 300,\n    show: \"collapse\",\n    newDailyGoal: 0\n  };\n  date = todayDate(\"yyyy-mm-dd\");\n\n  async componentDidMount() {\n    this.setState({\n      todayTotal: await fetchGetAPI(\n        config.apiEndPoint + \"/calories/\" + this.date + \"/total\"\n      )\n    });\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ dailyGoal: data.dailyGoal })\n    );\n    this.setState({\n      records: await fetchGetAPI(config.apiEndPoint + \"/calories/\" + this.date)\n    });\n  }\n  fetchCalorie = async query => {\n    //fetch calories burned based on profile and workout info\n    await fetch(\"https://trackapi.nutritionix.com/v2/natural/exercise\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-app-key\": \"d1f7ab9e52b72ffdcace031cd9fb3e75\",\n        \"x-app-id\": \"04ca317f\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify({\n        query: query,\n        gender: \"female\",\n        weight_kg: 50,\n        height_cm: 160,\n        age: 33\n      }) // body data type must match \"Content-Type\" header\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ calorie: Math.round(data.exercises[0].nf_calories) });\n      }); // parses JSON response into native Javascript objects\n  };\n  handleSelectExercise(workout) {\n    this.setState({ workout: workout });\n    if (this.state.duration > 0) {\n      let duration = this.state.duration;\n      if (this.state.time === \"hours\") {\n        duration = 60 * duration;\n      }\n      let query = workout + \" \" + duration + \" \" + \"minutes\";\n      this.fetchCalorie(query);\n    }\n    //call back function to get the updated value for console\n  }\n  handleSelectTime = event => {\n    this.setState({ time: event.target.name });\n    if (this.state.duration > 0) {\n      let duration = this.state.duration;\n      if (event.target.name === \"hours\") {\n        duration = 60 * duration;\n      }\n\n      let query = this.state.workout + \" \" + duration + \" \" + \"minutes\";\n      this.fetchCalorie(query);\n    }\n  };\n\n  handleTimeChange = async event => {\n    this.setState({ duration: event.target.value });\n    let duration = event.target.value;\n    if (this.state.time === \"hours\") {\n      duration = 60 * event.target.value;\n    }\n    let query = this.state.workout + \" \" + duration + \" \" + \"minutes\";\n    this.fetchCalorie(query);\n  };\n\n  handleSubmit = async () => {\n    let time = new Date();\n    let workout = this.state.workout;\n    let calorieBurned = this.state.calorie;\n    let duration = this.state.duration;\n    if (this.state.time === \"hours\") duration = duration * 60;\n    let body = JSON.stringify({\n      time: time.toLocaleString(),\n      calorieBurned: calorieBurned,\n      workout: workout,\n      date: this.date,\n      duration: duration\n    });\n    await fetchPostAPI(config.apiEndPoint + \"/calorie/\", \"POST\", body);\n    this.setState({\n      todayTotal: await fetchGetAPI(\n        config.apiEndPoint + \"/calories/\" + this.date + \"/total\"\n      ),\n      records: await fetchGetAPI(config.apiEndPoint + \"/calories/\" + this.date)\n    });\n  };\n\n  render() {\n    const colors = [\n      \"running\",\n      \"walking\",\n      \"hiit\",\n      \"cardio\",\n      \"yoga\",\n      \"elliptial\",\n      \"weight\"\n    ];\n    return (\n      <React.Fragment>\n        <div\n          className=\"card  mb-3  mt-5\"\n          id=\"centered\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <div\n            className=\"card-header bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <h5>Add new exercise</h5>\n          </div>\n          <div className=\"card-body \">\n            <div>\n              <label>\n                <span>Exercise</span>\n                <SelectList\n                  data={colors}\n                  defaultValue={\"running\"}\n                  onChange={value => this.handleSelectExercise(value)}\n                />\n              </label>\n            </div>\n            <div className=\"input-group\">\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                placeholder=\"Time\"\n                aria-label=\"Time\"\n                aria-describedby=\"button-addon4\"\n                onChange={this.handleTimeChange}\n              />\n\n              <div className=\"btn-group btn-group-toggle\" data-toggle=\"button\">\n                <label\n                  className={\n                    this.state.time === \"minutes\"\n                      ? \"btn btn-outline-secondary active\"\n                      : \"btn btn-outline-secondary\"\n                  }\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"minutes\"\n                    checked={this.state.time === \"minutes\"}\n                    onChange={this.handleSelectTime}\n                  />\n                  minutes\n                </label>\n                <label\n                  className={\n                    this.state.time === \"hours\"\n                      ? \"btn btn-outline-secondary active\"\n                      : \"btn btn-outline-secondary\"\n                  }\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"hours\"\n                    checked={this.state.time === \"hours\"}\n                    onChange={this.handleSelectTime}\n                  />\n                  hours\n                </label>\n              </div>\n            </div>\n\n            <div className=\"mt-2\">\n              {this.state.duration > 0 && (\n                <span>\n                  I did {this.state.duration} {this.state.time}{\" \"}\n                  {this.state.workout}. <br />\n                  Total calories estimated: {Math.round(\n                    this.state.calorie\n                  )}{\" \"}\n                  Calories.\n                </span>\n              )}\n            </div>\n          </div>\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }}>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm ml-2\"\n                style={{ backgroundColor: \"#9cd1f8\", color: \"white\" }}\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          name=\"show records\"\n          id=\"centered\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <table className=\"table  table-hover\">\n            <thead>\n              <tr>\n                <th colSpan=\"5\">Today's Exercise Records</th>\n              </tr>\n              <tr>\n                <th scope=\"col\">Time</th>\n                <th scope=\"col\">Workout</th>\n                <th scope=\"col\">Duration/minutes</th>\n                <th scope=\"col\">Calories</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.records.map(record => (\n                <tr key={record.id}>\n                  <td>{record.time}</td>\n                  <td>{record.workout}</td>\n                  <td>{record.duration}</td>\n                  <td>{record.calorieBurned}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary\"\n                      name={record.id}\n                      onClick={this.handleDelete}\n                    >\n                      <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default Exercise;\n","import React, { Component } from \"react\";\nimport fetchPostAPI from \"./commons/fetchPostAPI\";\nimport fetchGetAPI from \"./commons/fetchGetAPI\";\nimport config from \"./config.json\";\nimport fetchDeleteAPI from \"./commons/fetchDeleteAPI\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Label,\n  Legend,\n  ReferenceLine\n} from \"recharts\";\n\nclass Health extends Component {\n  state = {\n    height: 160,\n    heightincm: 160,\n    weight: 55,\n    age: 33,\n    unit: \"kg\",\n    show: \"collapse\",\n    newWeight: 0,\n    showAlert: \"alert alert-success alert-dismissible fade\",\n    showInfo: \"\",\n    weights: []\n  };\n\n  async componentDidMount() {\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ weight: data.weight })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ height: data.height, heightincm: data.height })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ age: data.age })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/weiwei/weights\").then(data =>\n      this.setState({ weights: data })\n    );\n  }\n\n  handleSelectMeter = event => {\n    this.setState({ unit: event.target.name });\n\n    //lb/ft -> kg/cm\n    if (event.target.name === \"kg\")\n      this.setState({\n        weight: Math.round(this.state.weight * 0.45359237),\n        height: Math.round(this.state.height * 30.48 * 10) / 10\n      });\n    else\n      this.setState({\n        weight: Math.round(this.state.weight * 2.20462262185),\n        height: Math.round(this.state.height * 0.0328084 * 100) / 100\n      });\n  };\n  handleEdit = () => {\n    //collapse div to add new weight\n    this.setState({\n      show: this.state.show === \"collapse\" ? \"collapse show\" : \"collapse\"\n    });\n  };\n  handleCancel = () => {\n    this.setState({ show: \"collapse\" });\n  };\n  handleNewWeightInput = event => {\n    this.setState({ newWeight: event.target.value });\n  };\n  handleAddWeight = async () => {\n    if (this.state.newWeight > 0) {\n      let newWeight = this.state.newWeight;\n      let time = new Date();\n      console.log(time);\n\n      //update weight records,convert to kg first. Weights stored in unit kg\n      if (this.state.unit === \"lb\")\n        newWeight = Math.round(this.state.newWeight * 0.45359237);\n\n      let body = JSON.stringify({\n        name: \"Weiwei\",\n        weight: newWeight,\n        time: time.toLocaleString()\n      });\n\n      await fetchPostAPI(config.apiEndPoint + \"/profiles/Weiwei\", \"POST\", body);\n      fetchGetAPI(config.apiEndPoint + \"/profiles/weiwei/weights\").then(\n        data => {\n          this.setState({\n            weights: data,\n            showAlert: \"alert alert-success alert-dismissible fade show\"\n          });\n          console.log(data);\n        }\n      );\n\n      //update profile\n      let body2 = JSON.stringify({\n        name: \"Weiwei\",\n        weight: newWeight,\n        height: 160,\n        age: 33,\n        dailyGoal: 500\n      });\n      fetchPostAPI(config.apiEndPoint + \"/profiles\", \"POST\", body2);\n\n      //update alert infomation\n      if (this.state.newWeight > this.state.weight) {\n        this.setState({\n          showInfo:\n            \"Succeed! Your new weight is \" +\n            this.state.newWeight +\n            \" \" +\n            this.state.unit +\n            \". You gained \" +\n            (this.state.newWeight - this.state.weight) +\n            \" \" +\n            this.state.unit\n        });\n      } else {\n        this.setState({\n          showInfo:\n            \"Succeed! Your new weight is \" +\n            this.state.newWeight +\n            \" \" +\n            this.state.unit +\n            \". You lost \" +\n            (this.state.weight - this.state.newWeight) +\n            \" \" +\n            this.state.unit\n        });\n      }\n\n      this.setState({ weight: this.state.newWeight });\n    }\n  };\n\n  handleDelete = async event => {\n    //currentTarget the target that listens to event which is button instead of font awesome\n    await fetchDeleteAPI(\n      config.apiEndPoint + \"/profiles/Weiwei/\" + event.currentTarget.name\n    );\n    let records = fetchGetAPI(\n      config.apiEndPoint + \"/profiles/weiwei/weights\"\n    ).then(data => {\n      return data;\n    });\n    records.then(data => this.setState({ weights: data }));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={this.state.showAlert} role=\"alert\">\n          {this.state.showInfo}\n          <button\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n            onClick={() =>\n              this.setState({\n                showAlert: \"alert alert-success alert-dismissible fade\"\n              })\n            }\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>{\" \"}\n        </div>\n        <div\n          className=\"card  mb-3  \"\n          id=\"centered\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <div\n            className=\"card-header bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }}>\n              <h5>Weiwei's Personal Profile</h5>\n            </div>\n            <div\n              className=\"btn-group btn-group-toggle btn-sm\"\n              data-toggle=\"button\"\n              style={{ display: \"inline-block\" }}\n            >\n              <label\n                className={\n                  this.state.unit === \"kg\"\n                    ? \"btn btn-sm btn-outline-secondary active\"\n                    : \"btn btn-sm btn-outline-secondary\"\n                }\n              >\n                <input\n                  type=\"radio\"\n                  name=\"kg\"\n                  checked={this.state.unit === \"kg\"}\n                  onChange={this.handleSelectMeter}\n                />\n                cm/kg\n              </label>\n              <label\n                className={\n                  this.state.unit === \"lb\"\n                    ? \"btn btn-sm btn-outline-secondary active\"\n                    : \"btn btn-sm btn-outline-secondary\"\n                }\n              >\n                <input\n                  type=\"radio\"\n                  name=\"lb\"\n                  checked={this.state.unit === \"lb\"}\n                  onChange={this.handleSelectMeter}\n                />\n                ft/lb\n              </label>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Weight</div>\n              <div className=\"col-7\">\n                {this.state.weight}\n                {this.state.unit === \"kg\" ? \" kg\" : \" lb\"}\n\n                <i\n                  className=\"fa fa-pencil-square-o ml-2\"\n                  aria-hidden=\"true\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.handleEdit}\n                />\n\n                <div className={this.state.show} id=\"collapseExample\">\n                  <div className=\"card card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-9\">\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          placeholder=\"Enter new weight here\"\n                          step=\"2.5\"\n                          className=\"mb-2\"\n                          onChange={this.handleNewWeightInput}\n                        />\n                      </div>\n                      <div className=\"col-3\">\n                        {this.state.unit === \"kg\" ? \" kg\" : \" lb\"}\n                      </div>\n                    </div>\n                    <div className=\"row \">\n                      <button\n                        className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                        onClick={this.handleAddWeight}\n                      >\n                        Add new weight\n                      </button>\n                      <button\n                        onClick={this.handleCancel}\n                        className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Height</div>\n              <div className=\"col-7\">\n                {this.state.height}\n                {this.state.unit === \"kg\" ? \"cm\" : \"ft\"}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Age</div>\n              <div className=\"col-7\">{this.state.age}</div>\n            </div>\n          </div>\n\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }} />\n            <div style={{ display: \"inline-block\" }}>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm ml-2\"\n                style={{ backgroundColor: \"#9cd1f8\", color: \"white\" }}\n              >\n                Edit\n              </button>\n            </div>\n          </div>\n        </div>\n        <div id=\"centered\">\n          <div>\n            <div name=\"show records\" id=\"left\">\n              <table className=\"table  table-hover\">\n                <thead>\n                  <tr>\n                    <th colSpan=\"4\">Your Weight Records</th>\n                  </tr>\n                  <tr>\n                    <th scope=\"col\">Time</th>\n                    <th scope=\"col\">Weight</th>\n                    <th scope=\"col\">BMI</th>\n                    <th scope=\"col\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.weights.map(record => (\n                    <tr key={record.id}>\n                      <td>{record.time}</td>\n                      <td>{record.weight} Kg</td>\n                      <td>\n                        {Math.round(\n                          (record.weight * 100000) /\n                            this.state.heightincm /\n                            this.state.heightincm\n                        ) / 10}\n                      </td>\n                      <td>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-sm btn-outline-secondary\"\n                          name={record.id}\n                          onClick={this.handleDelete}\n                        >\n                          <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div id=\"right\">\n              <LineChart width={500} height={300} data={this.state.weights}>\n                <XAxis dataKey=\"time\">\n                  <Label value=\"Date\" offset={0} position=\"insideBottom\" />\n                </XAxis>\n                <YAxis\n                  dataKey=\"weight\"\n                  label={{\n                    value: \"weight\",\n                    angle: -90,\n                    position: \"insideLeft\"\n                  }}\n                />\n                <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n                <Legend verticalAlign=\"top\" height={36} />\n\n                <Line\n                  name=\"weight records\"\n                  type=\"monotone\"\n                  dataKey=\"weight\"\n                  stroke=\"#82ca9d\"\n                />\n\n                <ReferenceLine y={60} stroke=\"green\" strokeDasharray=\"3 3\">\n                  <Label\n                    value=\"weight goal\"\n                    offset={2}\n                    position=\"insideRight\"\n                  />\n                </ReferenceLine>\n                <Tooltip />\n              </LineChart>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Health;\n","import React, { Component } from \"react\";\nimport fetchPostAPI from \"./commons/fetchPostAPI\";\nimport fetchGetAPI from \"./commons/fetchGetAPI\";\nimport config from \"./config.json\";\nimport fetchDeleteAPI from \"./commons/fetchDeleteAPI\";\nimport todayDate from \"./commons/Time\";\nclass Today extends Component {\n  state = {\n    todayTotal: 0,\n    records: [],\n    dailyGoal: 300,\n    showGoalForm: \"collapse\",\n    showWeightForm: \"collapse\",\n    newDailyGoal: 0,\n    unit: \"kg\"\n  };\n  date = todayDate(\"yyyy-mm-dd\");\n\n  async componentDidMount() {\n    this.setState({\n      todayTotal: await fetchGetAPI(\n        config.apiEndPoint + \"/calories/\" + this.date + \"/total\"\n      )\n    });\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ dailyGoal: data.dailyGoal })\n    );\n    this.setState({\n      records: await fetchGetAPI(config.apiEndPoint + \"/calories/\" + this.date)\n    });\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ weight: data.weight })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ height: data.height, heightincm: data.height })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/Weiwei\").then(data =>\n      this.setState({ age: data.age })\n    );\n    fetchGetAPI(config.apiEndPoint + \"/profiles/weiwei/weights\").then(data =>\n      this.setState({ weights: data })\n    );\n  }\n  handleCancel = () => {\n    this.setState({ showGoalForm: \"collapse\", showWeightForm: \"collapse\" });\n  };\n\n  handleEditWeight = () => {\n    this.setState({\n      showWeightForm:\n        this.state.showWeightForm === \"collapse\" ? \"collapse show\" : \"collapse\"\n    });\n  };\n  handleEditGoal = () => {\n    this.setState({\n      showGoalForm:\n        this.state.showGoalForm === \"collapse\" ? \"collapse show\" : \"collapse\"\n    });\n  };\n  handleChangeDailyGoal = event => {\n    this.setState({ newDailyGoal: event.target.value });\n  };\n  handleSave = async () => {\n    //save new daily goal\n    let newDailyGoal = this.state.newDailyGoal;\n    await fetchPostAPI(\n      config.apiEndPoint + \"/profiles/Weiwei/\" + newDailyGoal,\n      \"POST\",\n      {}\n    );\n    this.setState({ dailyGoal: this.state.newDailyGoal });\n  };\n\n  handleDelete = async event => {\n    await fetchDeleteAPI(\n      config.apiEndPoint +\n        \"/profiles/Weiwei/calories/\" +\n        event.currentTarget.name\n    );\n    this.setState({\n      records: await fetchGetAPI(config.apiEndPoint + \"/calories/\" + this.date),\n      todayTotal: await fetchGetAPI(\n        config.apiEndPoint + \"/calories/\" + this.date + \"/total\"\n      )\n    });\n  };\n\n  handleSelectMeter = event => {\n    this.setState({ unit: event.target.name });\n\n    //lb/ft -> kg/cm\n    if (event.target.name === \"kg\")\n      this.setState({\n        weight: Math.round(this.state.weight * 0.45359237),\n        height: Math.round(this.state.height * 30.48 * 10) / 10\n      });\n    else\n      this.setState({\n        weight: Math.round(this.state.weight * 2.20462262185),\n        height: Math.round(this.state.height * 0.0328084 * 100) / 100\n      });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          id=\"centered\"\n          className=\"card  mb-3 mt-5\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <div\n            className=\"card-header bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }}>\n              <h5>Weiwei's Personal Profile</h5>\n            </div>\n            <div\n              className=\"btn-group btn-group-toggle btn-sm\"\n              data-toggle=\"button\"\n              style={{ display: \"inline-block\" }}\n            >\n              <label\n                className={\n                  this.state.unit === \"kg\"\n                    ? \"btn btn-sm btn-outline-secondary active\"\n                    : \"btn btn-sm btn-outline-secondary\"\n                }\n              >\n                <input\n                  type=\"radio\"\n                  name=\"kg\"\n                  checked={this.state.unit === \"kg\"}\n                  onChange={this.handleSelectMeter}\n                />\n                cm/kg\n              </label>\n              <label\n                className={\n                  this.state.unit === \"lb\"\n                    ? \"btn btn-sm btn-outline-secondary active\"\n                    : \"btn btn-sm btn-outline-secondary\"\n                }\n              >\n                <input\n                  type=\"radio\"\n                  name=\"lb\"\n                  checked={this.state.unit === \"lb\"}\n                  onChange={this.handleSelectMeter}\n                />\n                ft/lb\n              </label>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Weight</div>\n              <div className=\"col-7\">\n                {this.state.weight}\n                {this.state.unit === \"kg\" ? \" kg\" : \" lb\"}\n\n                <i\n                  className=\"fa fa-pencil-square-o ml-2\"\n                  aria-hidden=\"true\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.handleEditWeight}\n                />\n\n                <div className={this.state.showWeightForm} id=\"collapseExample\">\n                  <div className=\"card card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-9\">\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          placeholder=\"Enter new weight here\"\n                          step=\"2.5\"\n                          className=\"mb-2\"\n                          onChange={this.handleNewWeightInput}\n                        />\n                      </div>\n                      <div className=\"col-3\">\n                        {this.state.unit === \"kg\" ? \" kg\" : \" lb\"}\n                      </div>\n                    </div>\n                    <div className=\"row \">\n                      <button\n                        className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                        onClick={this.handleAddWeight}\n                      >\n                        Add new weight\n                      </button>\n                      <button\n                        onClick={this.handleCancel}\n                        className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Height</div>\n              <div className=\"col-7\">\n                {this.state.height}\n                {this.state.unit === \"kg\" ? \"cm\" : \"ft\"}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-3 ml-5\">Age</div>\n              <div className=\"col-7\">{this.state.age} y</div>\n            </div>\n          </div>\n\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div> Your Weight Goal is 50 kg, you need to lose 30 kg</div>\n          </div>\n        </div>\n        <div\n          id=\"centered\"\n          className=\"card  mb-3  mt-5\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <div\n            className=\"card-header bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <h5>Today's Workout</h5>\n            {this.date}\n          </div>\n          <div className=\"card-body \">\n            <span>{this.state.todayTotal} Caloreis Burned</span>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar progress-bar-striped bg-success\"\n                role=\"progressbar\"\n                style={{\n                  width:\n                    this.state.todayTotal / this.state.dailyGoal >= 1\n                      ? \"100%\"\n                      : Math.round(\n                          (this.state.todayTotal / this.state.dailyGoal) * 100\n                        ) + \"%\"\n                }}\n                aria-valuenow={this.state.todayTotal}\n                aria-valuemin=\"0\"\n                aria-valuemax={this.state.dailyGoal}\n              >\n                {this.state.todayTotal / this.state.dailyGoal >= 1\n                  ? \"100%\"\n                  : Math.round(\n                      (this.state.todayTotal / this.state.dailyGoal) * 100\n                    ) + \" %\"}\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"card-footer bg-transparent\"\n            style={{ borderColor: \"#9cd1f8\" }}\n          >\n            <div style={{ display: \"inline-block\" }}>\n              Your goal to burn daliy is {this.state.dailyGoal} Calories\n              <i //button to edit the daily dailyGoal\n                className=\"fa fa-pencil-square-o ml-2\"\n                aria-hidden=\"true\"\n                style={{ cursor: \"pointer\" }}\n                onClick={this.handleEditGoal}\n              />\n              <div //div to show the form of editing dailyGoal\n                className={this.state.showGoalForm}\n                id=\"collapseExample\"\n              >\n                <div className=\"card card-body\">\n                  <div className=\"row\">\n                    <div className=\"col-8\">\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        placeholder=\"Enter your daily goal\"\n                        step=\"2.5\"\n                        className=\"mb-2\"\n                        onChange={this.handleChangeDailyGoal}\n                      />\n                    </div>\n                    <div className=\"col-4\">Calories </div>\n                  </div>\n                  <div className=\"row \">\n                    <button\n                      className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                      onClick={this.handleSave}\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={this.handleCancel}\n                      className=\"btn btn-sm ml-3 btn-outline-secondary\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          id=\"centered\"\n          name=\"show records\"\n          className=\"mb-3  mt-5\"\n          style={{\n            borderColor: \"#9cd1f8\",\n            width: \"40%\"\n          }}\n        >\n          <table className=\"table  table-hover\">\n            <thead>\n              <tr>\n                <th colSpan=\"5\">Today's exercise records</th>\n              </tr>\n              <tr>\n                <th scope=\"col\">Time</th>\n                <th scope=\"col\">Workout</th>\n                <th scope=\"col\">Duration/minutes</th>\n                <th scope=\"col\">Calories</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.records.map(record => (\n                <tr key={record.id}>\n                  <td>{record.time}</td>\n                  <td>{record.workout}</td>\n                  <td>{record.duration}</td>\n                  <td>{record.calorieBurned}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary\"\n                      name={record.id}\n                      onClick={this.handleDelete}\n                    >\n                      <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Today;\n","import React, { Component } from \"react\";\n\nclass Planner extends Component {\n  handleClick = day => {\n    console.log(day);\n  };\n  render() {\n    return (\n      <div name=\"weekly planner\" id=\"centered\" style={{ width: \"60%\" }}>\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th style={{ width: \"15%\" }} scope=\"col\">\n                Days\n              </th>\n              <th scope=\"col\">Plans</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              id=\"sunday\"\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Sunday\"\n              onClick={() => this.handleClick(\"Sunday\")}\n            >\n              <th scope=\"row\">Sunday</th>\n\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Monday\"\n              onClick={() => this.handleClick(\"Monday\")}\n            >\n              <th scope=\"row\">Monday</th>\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Tuesday\"\n              onClick={() => this.handleClick(\"Tuesday\")}\n            >\n              <th scope=\"row\">Tuesday</th>\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Wednesday\"\n              onClick={() => this.handleClick(\"Wednesday\")}\n            >\n              <th scope=\"row\">Wednesday</th>\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Thursday\"\n              onClick={() => this.handleClick(\"Thursday\")}\n            >\n              <th scope=\"row\">Thursday</th>\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Friday\"\n              onClick={() => this.handleClick(\"Friday\")}\n            >\n              <th scope=\"row\">Friday</th>\n              <td />\n            </tr>\n            <tr\n              style={{ cursor: \"pointer\" }}\n              data-toggle=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Click to edit plans for Saturday\"\n              onClick={() => this.handleClick(\"Saturday\")}\n            >\n              <th scope=\"row\">Saturday</th>\n              <td />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Planner;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/commons/NavBar\";\nimport DailyCalories from \"./components/DailyCalories\";\nimport Exercise from \"./components/Exercise\";\nimport Health from \"./components/Health\";\nimport Today from \"./components/Today\";\nimport { Route, Switch } from \"react-router-dom\";\nimport config from \"./components/config.json\";\nimport Planner from \"./components/Planner\";\nimport fetchDeleteAPI from \"./components/commons/fetchDeleteAPI\";\nimport fetchGetAPI from \"./components/commons/fetchGetAPI\";\nimport fetchPostAPI from \"./components/commons/fetchPostAPI\";\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <div>\n          <Switch>\n            <Route path=\"/today\" component={Today} />\n            <Route path=\"/addexercise\" component={Exercise} />\n            <Route path=\"/addweight\" component={Health} />\n\n            <Route path=\"/profile\" component={Health} />\n            <Route path=\"/planner\" component={Planner} />\n\n            <Route path=\"/\" component={Today} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { render } from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}